{"version":3,"file":"notify.umd.js","sources":["../../../projects/notify/src/lib/notify-container/notify-container.component.ts","../../../projects/notify/src/lib/notify-container/notify-container.component.html","../../../projects/notify/src/lib/notify.component.ts","../../../projects/notify/src/lib/notify.component.html","../../../projects/notify/src/lib/elementAttachment.service.ts","../../../projects/notify/src/lib/notify.service.ts","../../../projects/notify/src/lib/notify.module.ts","../../../projects/notify/src/public-api.ts","../../../projects/notify/src/notify.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-notify-container',\n  templateUrl: './notify-container.component.html',\n  styleUrls: ['./notify-container.component.css']\n})\nexport class NotifyContainerComponent implements OnInit {\n\n  constructor() { }\n  \n\n  ngOnInit(): void {\n  }\n\n}\n","<ng-content id=\"parent\"></ng-content>","import { HostBinding, Input } from '@angular/core';\nimport { EventEmitter } from '@angular/core';\nimport { Output } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { NotifyService } from './notify.service';\n\n@Component({\n  selector: 'lib-notify',\n  templateUrl: './notify.component.html',\n  styleUrls: ['./notify.component.css'\n  ]\n})\nexport class NotifyComponent implements OnInit {\n  @Input() header: string;\n  @Input() message: string;\n  @Input() type = '';\n  @Output() destroy: EventEmitter<any> = new EventEmitter();\n\n  notifref: NotifyComponent;\n  // @HostBinding('class.redbackground') warning: boolean;\n  constructor(private NotifyService: NotifyService) {\n\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  // isWarning(): boolean {\n  //   if (this.type === 'warning') {\n  //     return true;\n  //   }\n  //   else {\n  //     return false;\n  //   }\n\n  // }\n\n  getBackground(): string {\n    if (this.type === 'warning') {\n      return 'orange';\n    }\n    else if (this.type == 'error') {\n      return 'red'\n    }\n    else {\n      return 'blue';\n    }\n  }\n\n  onClose(): void {\n    this.destroy.emit();\n  }\n}\n","<div class=\"card container  my-4 stack-top\">\n    <div class=\"card-header container-fluid\" [style.backgroundColor]=\"getBackground()\">\n        <div class=\"row\">\n            <div class=\"col\">\n                <h3>{{header}}</h3>\n            </div>\n            <div class=\"col\">\n                <a type=\"button\" (click)=\"onClose()\" >X\n                </a>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <p class=\"card-text\">{{message}}</p>\n    </div>\n</div>","import { EmbeddedViewRef } from '@angular/core';\nimport { ApplicationRef } from '@angular/core';\nimport { Injector } from '@angular/core';\nimport { ComponentRef } from '@angular/core';\nimport { ComponentFactoryResolver, Injectable } from '@angular/core'\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ElementAttachmentService {\n\n    constructor(\n        private componentFactoryResolver: ComponentFactoryResolver,\n        private appRef: ApplicationRef,\n        private injector: Injector) {\n\n    }\n    // 1. Create a Cotntainer component reference from the component \n    createComponentinDom(component: any): ComponentRef<any> {\n        const componentRef = this.componentFactoryResolver\n            .resolveComponentFactory(component)\n            .create(this.injector);\n\n        // 2. Attach component to the appRef so that it's inside the ng component tree\n        this.appRef.attachView(componentRef.hostView);\n        return componentRef;\n    }\n\n    // 3. Get DOM element from component\n    getElement(componentRef: ComponentRef<any>): HTMLElement {\n        return (componentRef.hostView as EmbeddedViewRef<any>)\n            .rootNodes[0] as HTMLElement;\n    }\n\n    // 4. Append DOM element to the body\n    addChildtoElement(child: HTMLElement, parent: HTMLElement = document.body) {\n        parent.appendChild(child);\n    }\n\n    //5 Destroy Element\n    destroyElement(componentRef: ComponentRef<any>) {\n        this.appRef.detachView(componentRef.hostView);\n        componentRef.destroy();\n    }\n\n}","import { ComponentRef } from '@angular/core';\nimport { ApplicationRef, ComponentFactoryResolver, EmbeddedViewRef, Injectable, Injector } from '@angular/core';\nimport { ElementAttachmentService } from './elementAttachment.service';\nimport { INotification } from './notification.interface';\nimport { NotifyContainerComponent } from './notify-container/notify-container.component';\nimport { NotifyComponent } from './notify.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotifyService {\n\n  maxLimit = 1;\n  Queue = Array<INotification>();\n\n  private NotifyContainerElement: HTMLElement;\n  private NotifyContainerRef: ComponentRef<NotifyContainerComponent>;\n  constructor(private elementService: ElementAttachmentService,\n    private appRef: ApplicationRef) {\n\n    this.NotifyContainerRef = this.elementService.createComponentinDom(NotifyContainerComponent);\n    this.NotifyContainerElement = this.elementService.getElement(this.NotifyContainerRef);\n    this.elementService.addChildtoElement(this.NotifyContainerElement);\n  }\n\n\n  private appendComponentToContainer(header: string, message: string, type: string) {\n    //Create Child Component\n    const childComponentRef = this.elementService.createComponentinDom(NotifyComponent);\n    //Get child Component\n    const childElement = this.elementService.getElement(childComponentRef);\n\n    childComponentRef.instance.header = header;\n\n    childComponentRef.instance.message = message;\n\n    childComponentRef.instance.type = type;\n\n\n\n    const sub = childComponentRef.instance.destroy.subscribe(() => {\n      sub.unsubscribe();\n      this.destroy(childComponentRef);\n    });\n    //Add child component to parent\n    this.elementService.addChildtoElement(childElement, this.NotifyContainerElement);\n\n\n    if (type == \"info\") {\n      setTimeout(() => {\n        if(childComponentRef)\n        {this.destroy(childComponentRef);}\n      }, 10000);\n    }\n  }\n\n  open(header, message, category) {\n    if (this.maxLimit <= 5) {\n      this.appendComponentToContainer(header, message + this.maxLimit, category);\n      this.maxLimit++;\n    }\n    else {\n      this.Queue.push({header:header,message:message, type:category});\n    }\n  }\n\n  destroy(childComponentRef: ComponentRef<any>) {\n    this.elementService.destroyElement(childComponentRef);\n    if (this.maxLimit > 0) {\n      this.maxLimit--;\n      if (this.Queue.length >= 1) {\n        this.appendComponentToContainer(this.Queue[0].header, this.Queue[0].message, this.Queue[0].type);\n        this.Queue.shift();\n      }\n    }\n  }\n\n\n\n\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NotifyComponent } from './notify.component';\nimport { NotifyContainerComponent } from './notify-container/notify-container.component';\n\n\n\n@NgModule({\n  declarations: [NotifyComponent, NotifyContainerComponent],\n  imports: [CommonModule\n  ],\n  exports: [NotifyComponent]\n})\nexport class NotifyModule { }\n","/*\n * Public API Surface of notify\n */\n\nexport * from './lib/notify.service';\nexport * from './lib/notify.component';\nexport * from './lib/notify.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0.ɵɵprojection","Component","EventEmitter","i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵlistener","i0.ɵɵadvance","i0.ɵɵstyleProp","i0.ɵɵtextInterpolate","Input","Output","Injectable","CommonModule","NgModule"],"mappings":"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"}