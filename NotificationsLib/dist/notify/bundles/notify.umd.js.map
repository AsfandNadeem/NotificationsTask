{"version":3,"file":"notify.umd.js","sources":["../../../projects/notify/src/lib/libconfig.ts","../../../projects/notify/src/lib/notify-container/notify-container.component.ts","../../../projects/notify/src/lib/notify-container/notify-container.component.html","../../../projects/notify/src/lib/notify.component.html","../../../projects/notify/src/lib/notify.component.ts","../../../projects/notify/src/lib/elementAttachment.service.ts","../../../projects/notify/src/lib/notify.service.ts","../../../projects/notify/src/lib/notify.module.ts","../../../projects/notify/src/public-api.ts","../../../projects/notify/src/notify.ts"],"sourcesContent":["import { InjectionToken } from \"@angular/core\";\n\nexport interface libconfig {\n    timeOut: number;\n    timeOutRequiredCategories: Array<string>;\n    maxLimit: number;\n}\n\nexport const LibConfigService = new InjectionToken<libconfig>('libconfig');\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-notify-container',\n  templateUrl: './notify-container.component.html',\n  styleUrls: ['./notify-container.component.css']\n})\nexport class NotifyContainerComponent implements OnInit {\n\n  constructor() { }\n  \n\n  ngOnInit(): void {\n  }\n\n}\n","<ng-content></ng-content>","<div class=\"card container  my-4 stack-top\">\n    <div class=\"card-header container-fluid\" [ngClass]=\"type\">\n        <div class=\"row\">\n            <div class=\"col-10\">\n                <h3>{{header}}</h3>\n            </div>\n            <div class=\"col-2\">\n                <a type=\"button\" (click)=\"onClose()\">X\n                </a>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <p class=\"card-text\">{{message}}</p>\n    </div>\n    <div *ngIf=\"progressrequired\" class=\"progress\">\n        <div #progressDiv [style.width.%]=\"setWidth\" [ngClass]=\"{\n            'bg-warning': type === 'warning',\n            'bg-danger': type === 'error'\n          }\" class=\"progress-bar progress-bar-striped active\" role=\"progressbar\" aria-valuemin=\"0\" aria-valuemax=\"100\">\n\n        </div>\n    </div>\n</div>","import { AfterContentInit,Input } from '@angular/core';\nimport { EventEmitter } from '@angular/core';\nimport { Output } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { interval, Subscription } from 'rxjs';\nimport 'rxjs/add/observable/interval';\nimport { NotifyService } from './notify.service';\n@Component({\n  selector: 'lib-notify',\n  templateUrl: './notify.component.html',\n  styleUrls: ['./notify.component.css'\n  ]\n})\nexport class NotifyComponent implements OnInit, AfterContentInit {\n  @Input() header: string;\n  @Input() message: string;\n  @Input() type = '';\n  @Input() progressrequired = false;\n  @Input() progressTime = 0;\n  @Input() actualTime = 0;\n  @Output() destroy: EventEmitter<any> = new EventEmitter();\n  mySubscription: Subscription;\n  myVar;\n  setWidth = 0;\n  constructor(private NotifyService: NotifyService) {\n\n  }\n\n  ngOnInit(): void {\n    if (this.progressrequired){\n    this.myVar = setTimeout(() => {\n        this.onClose();\n    }, this.progressTime + 500);\n  }\n  }\n\n  ngAfterContentInit() {\n    if (this.progressrequired) {\n      this.setWidthMethod();\n      this.mySubscription = interval(100).subscribe((x => {\n        this.setProgress();\n      }));\n    }\n\n  }\n  \n\n  onClose(): void {\n    if (this.progressrequired) {\n    this.mySubscription.unsubscribe();\n    clearTimeout(this.myVar);\n    }\n    this.destroy.emit();\n  }\n\n  setProgress() {\n    if (this.actualTime > 0) {\n      this.actualTime = this.actualTime - ((this.progressTime)/100);\n      this.setWidthMethod();\n    }\n    else {\n      this.mySubscription.unsubscribe();\n    }\n  }\n\n  setWidthMethod()\n  {\n    this.setWidth = ((this.actualTime / this.progressTime) * 100);\n  }\n}\n","import { EmbeddedViewRef } from '@angular/core';\nimport { ApplicationRef } from '@angular/core';\nimport { Injector } from '@angular/core';\nimport { ComponentRef } from '@angular/core';\nimport { ComponentFactoryResolver, Injectable } from '@angular/core'\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ElementAttachmentService {\n\n    constructor(\n        private componentFactoryResolver: ComponentFactoryResolver,\n        private appRef: ApplicationRef,\n        private injector: Injector) {\n\n    }\n    // 1. Create a Cotntainer component reference from the component \n    createComponentinDom(component: any): ComponentRef<any> {\n        const componentRef = this.componentFactoryResolver\n            .resolveComponentFactory(component)\n            .create(this.injector);\n\n        // 2. Attach component to the appRef so that it's inside the ng component tree\n        this.appRef.attachView(componentRef.hostView);\n        return componentRef;\n    }\n\n    // 3. Get DOM element from component\n    getElement(componentRef: ComponentRef<any>): HTMLElement {\n        return (componentRef.hostView as EmbeddedViewRef<any>)\n            .rootNodes[0] as HTMLElement;\n    }\n\n    // 4. Append DOM element to the body\n    addChildtoElement(child: HTMLElement, parent: HTMLElement = document.body) {\n        parent.appendChild(child);\n    }\n\n    //5 Destroy Element\n    destroyElement(componentRef: ComponentRef<any>) {\n        this.appRef.detachView(componentRef.hostView);\n        componentRef.destroy();\n    }\n\n}","import { ComponentRef, Inject } from '@angular/core';\nimport { ApplicationRef, ComponentFactoryResolver, EmbeddedViewRef, Injectable, Injector } from '@angular/core';\n\nimport { ElementAttachmentService } from './elementAttachment.service';\nimport { libconfig, LibConfigService } from './libconfig';\nimport { INotification } from './notification.interface';\nimport { NotifyContainerComponent } from './notify-container/notify-container.component';\nimport { NotifyComponent } from './notify.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotifyService {\n  private libConfig: libconfig;\n  maxLimit = 0;\n  countNotifications = 0;\n  Queue = Array<INotification>();\n  private _children: NotifyComponent[] = [];\n  private NotifyContainerElement: HTMLElement;\n  private NotifyContainerRef: ComponentRef<NotifyContainerComponent>;\n\n  constructor(private elementService: ElementAttachmentService,\n    private appRef: ApplicationRef, @Inject(LibConfigService) private config) {\n\n    this.NotifyContainerRef = this.elementService.createComponentinDom(NotifyContainerComponent);\n    this.NotifyContainerElement = this.elementService.getElement(this.NotifyContainerRef);\n    this.elementService.addChildtoElement(this.NotifyContainerElement);\n    this.libConfig = this.config;\n    this.maxLimit = this.libConfig.maxLimit;\n  }\n\n\n  private appendComponentToContainer(header: string, message: string, type: string) {\n    //Create Child Component\n    const childComponentRef = this.elementService.createComponentinDom(NotifyComponent);\n    //Get child Component\n    const childElement = this.elementService.getElement(childComponentRef);\n\n    this.defineComponentValues(childComponentRef,header,message,type);\n    //Add child component to parent\n    this.elementService.addChildtoElement(childElement, this.NotifyContainerElement);\n    this._children.push(childComponentRef.instance);\n    this.countNotifications++;\n\n  \n  }\n\n  open(header, message, category) {\n    if (this.countNotifications < this.maxLimit) {\n      this.appendComponentToContainer(header, message, category);\n    }\n    else {\n      this.Queue.push({ header: header, message: message, type: category });\n    }\n  }\n\n  destroy(childComponentRef: ComponentRef<any>) {\n    this.elementService.destroyElement(childComponentRef);\n    if (this.countNotifications > 0) {\n      this.countNotifications--;\n      if (this.Queue.length >= 1) {\n        this.appendComponentToContainer(this.Queue[0].header, this.Queue[0].message, this.Queue[0].type);\n        this.Queue.shift();\n      }\n    }\n  }\n\n\n  destroyAll() {\n    this.Queue = [];\n    this._children.forEach(cmp => {\n      cmp.onClose();\n    });\n    this._children = [];\n    this.countNotifications = 0;\n    \n  }\n\n  insertTimeOut(childComponentRef: ComponentRef<any>){\n    childComponentRef.instance.progressrequired = true;\n    childComponentRef.instance.progressTime = this.libConfig.timeOut;\n    childComponentRef.instance.actualTime =  this.libConfig.timeOut;\n  }\n\n\n  defineComponentValues(childComponentRef: ComponentRef<any>, header, message, type)\n  {\n    childComponentRef.instance.header = header;\n    childComponentRef.instance.message = message;\n    childComponentRef.instance.type = type;\n    const sub = childComponentRef.instance.destroy.subscribe(() => {\n      sub.unsubscribe();\n      this.destroy(childComponentRef);\n    });\n\n    if (this.libConfig.timeOutRequiredCategories.includes(type)) {  \n      this.insertTimeOut(childComponentRef);\n    }\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { NotifyComponent } from './notify.component';\nimport { NotifyContainerComponent } from './notify-container/notify-container.component';\nimport { libconfig, LibConfigService } from './libconfig';\n\n\n\n@NgModule({\n  declarations: [NotifyComponent, NotifyContainerComponent],\n  imports: [CommonModule\n  ],\n  exports: [NotifyComponent]\n  // providers: [ { provide: APP_CONFIG, useValue: AppConfig }]\n})\nexport class NotifyModule { \n    public static forRoot(config: libconfig): ModuleWithProviders<NotifyModule> {\n\n      return {\n          ngModule: NotifyModule,\n          providers: [\n              {\n                  provide: LibConfigService,\n                  useValue: config\n              }\n          ]\n      };\n  }\n}\n\n","/*\n * Public API Surface of notify\n */\n\nexport * from './lib/notify.service';\nexport * from './lib/notify.component';\nexport * from './lib/notify.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["InjectionToken","i0.ɵɵprojection","Component","i0.ɵɵelementStart","i0.ɵɵelement","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵstyleProp","i0.ɵɵproperty","EventEmitter","interval","i0.ɵɵtext","i0.ɵɵlistener","i0.ɵɵtemplate","i0.ɵɵtextInterpolate","Input","Output","Injectable","Inject","CommonModule","NgModule"],"mappings":"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"}